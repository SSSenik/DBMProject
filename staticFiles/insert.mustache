<html>
    <head>
        <title>Insert {{title}}</title>
        <script>
            function submitForm() {                
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function() {
                    if (this.readyState == 4 && this.status == 200) {
                        var response = JSON.parse(this.responseText);
                        if(!response.success) {
                            alert("An error has ocurred");
                            return
                        }
                        window.location.href = '/backoffice/{{title}}';
                    }
                };
                xhttp.open("POST", "/api/{{title}}/", true);
                xhttp.setRequestHeader("Content-Type", "application/json");
                let data = {
                    {{#properties}}
                    '{{name}}':document.getElementsByName('{{name}}')[0].value,
                    {{/properties}}
                };

                {{#references}}
                    data['{{name}}'] = {{isManyToMany}} 
                        ? [...document.getElementsByName('{{model}}_ids')].filter(node => node.checked).map((node => node.value))
                        : document.getElementsByName('{{name}}')[0].value
                {{/references}}
                
                xhttp.send(JSON.stringify(data));
                return false;
            }

            {{#hasReferences}}
            function loadValues(model, label, controlId, isManyToMany) {
                var xhr = new XMLHttpRequest();
                xhr.open("GET", `/api/${model}`, true);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4 && xhr.status === 200) {
                        var control = document.getElementById(controlId);
                        var response = JSON.parse(this.responseText);
                        if (isManyToMany) {
                            var div = document.createElement("div");
                            div.id = model.toLowerCase() + "_id";
                            response.forEach(row => {
                                var optiondiv = document.createElement("div");
                                optiondiv.class = 'reference';
                                var optioninp = document.createElement("input");
                                optioninp.id = model + '_id_' + row.id;
                                optioninp.name = model + '_ids';
                                optioninp.type = 'checkbox';
                                optioninp.value = row.id;
                                var optionlbl = document.createElement("label");
                                optionlbl.innerHTML = row[label];
                                div.appendChild(optiondiv);
                                optiondiv.appendChild(optioninp);
                                optiondiv.appendChild(optionlbl);
                            });
                            control.appendChild(div);
                        } else {
                            var select = document.createElement("select");
                            select.name = model.toLowerCase()+"_id";
                            
                            var option = document.createElement("option");
                            option.text = 'Select Option';
                            option.value = '';
                            select.add(option);

                            response.forEach(row => {
                                var option = document.createElement("option");
                                option.text = row[label];
                                option.value = row.id;
                                select.add(option);
                            });
                            control.appendChild(select);
                        }
                    }
                }
                xhr.send();
            }
            
            
            window.onload = function() {
                {{#references}}
                loadValues('{{model}}','{{label}}','div{{model}}value', {{isManyToMany}});
                {{/references}}
            }
            {{/hasReferences}}
        </script>
    </head>
    <body>
        <div>
            <form onsubmit="submitForm(); return false;">
                {{#properties}}
                <div>
                    <label>{{name}}:</label>
                    <input type="{{type}}" name="{{name}}" {{#required}}required{{/required}} {{#attrs}}{{name}}="{{value}}"{{/attrs}}>
                </div>
                {{/properties}}
                {{#references}}
                <div>
                    <label>{{model}}:</label>
                    <div id="div{{model}}value"></div>
                </div>
                {{/references}}
                <input type="submit" value="Save"/>
            </form>
        </div>
    </body>
</html>